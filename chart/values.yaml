env: prod

image:
  repo: ghcr.io/goshlanguage/mate
  tag: latest

accounts:
  # You must create a secret containing the env vars `TDA_CLIENT_ID`
  # and `TDA_REFRESH_TOKEN` to pass into mate to connect to tdameritrade
  #
  # This can be created via :
  # kubectl create secret generic tda-creds --from-literal=TDA_CLIENT_ID=$TDA_CLIENT_ID --from-literal=TDA_REFRESH_TOKEN=$TDA_REFRESH_TOKEN
  tdameritrade:
    enabled: true
    existingSecret: tda-creds

  # You must create a secret containing the env vars `KRAKEN_API_KEY`
  # and `KRAKEN_API_SECRET` to pass into mate to connect to kraken
  #
  # This can be created via :
  # kubectl create secret generic kraken-creds --from-literal=KRAKEN_API_KEY=$KRAKEN_API_KEY --from-literal=KRAKEN_API_SECRET=$KRAKEN_API_SECRET
  kraken:
    enabled: true
    existingSecret: kraken-creds

api:
  enabled: true
  debug: true

  ingress:
    enabled: false
    clusterIssuer: letsencrypt-prod
    # hostname: my.website.com
    # tlsSecret: my-secret


collector:
  api:
    enabled: true
    api_host: http://mate-api
  # MATE needs the oauth2 creds to exist in a secret. This secret can be created with:
  # kubectl create secret generic mate-client-creds --from-literal=MATE_CLIENT_ID=<id> --from-literal=MATE_CLIENT_KEY=<key> --from-literal=MATE_CLIENT_SECRET=<secret>
  clientCreds:
    existingSecret: mate-client-creds
  enabled: true
  debug: true
  salt:
    # Uncomment and add your text hash here to automatically propagate a secret and mount it
    # value: my-hash-salt
    value:

    # existingSecret expects a key `salt` to be present in the secret
    #
    # You can create this secret in your namespace with:
    # kubectl create secret generic mate-salt --from-literal=salt=$(openssl rand -hex 16)
    existingSecret: mate-salt

  persistence:
    enabled: true
    existingClaim:
    size: 100G

  updateStrategy: RollingUpdate

  stocks:
  - MSFT
  - AAPL
  - EQIX
  - QQQ
  - TQQQ
  - SQQQ

  crypto:
  - XETHZUSD
  - XXBTZUSD
  - ATOMUSD
  - LTCUSD
  - BTCUSD
  - DOGEUSD
  - ZECUSD

  pollDuration: 60
  filepath: /data

oauth2:
  authority:

postgresql:
  enabled: true
  postgresqlDatabase: mate

  image:
    repository: arm64v8/postgres
    tag: bullseye

salt:
  existingSecret: mate-salt

s3:
  enabled: true
  bucketName: mate-data
  # depending on your deployment of rook, you may wish to set the proto to http or https
  proto: http
